{"version":3,"sources":["webpack:///src/main/resources/static/lib/engine.min.js","webpack:///webpack/bootstrap c360880a71448c17d577","webpack:///./src/main/engine/engine.js","webpack:///./src/main/engine/angular/entityDirective.js","webpack:///./src/main/engine/angular/sceneDirective.js","webpack:///./src/main/engine/physics/events.js","webpack:///./src/main/engine/angular/movementFactory.js","webpack:///./src/main/engine/movement/AutomaticMovement.js","webpack:///./src/main/engine/movement/Movement.js","webpack:///./src/main/engine/movement/CustomMovement.js","webpack:///./src/main/engine/angular/utils.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_entityDirective","_entityDirective2","_sceneDirective","_sceneDirective2","_movementFactory","_movementFactory2","_utils","_utils2","angular","Error","directive","value","factory","window","Object","defineProperty","restrict","scope","size","position","texture","movement","name","collision","require","link","elem","attr","scene","entity","updateMovement","movements","performed","callback","oldPosition","newPosition","update","push","setPosition","fireCollision","event","actions","$event","$actions","addEntity","$watchCollection","css","$watch","$on","removeEntity","_events","$rootScope","$window","controller","$scope","$element","$attrs","this","entities","tick","length","newMovements","forEach","source","target","md","minDist","penetration","handled","evt","Math","abs","endPosition","delta","actual","restMotion","friction","bounce","v","velocity","CollisionEvent","EntityTarget","doWallCollision","WallTarget","nextId","entityId","animCallback","$digest","animRequest","requestAnimationFrame","cancelAnimationFrame","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","i","descriptor","key","protoProps","staticProps","CollisionTarget","_entity","Symbol","_name","_CollisionTarget","_this","getPrototypeOf","get","_source","_CollisionTarget2","_this2","_target","custom","_CustomMovement2","automatic","_AutomaticMovement2","_AutomaticMovement","_CustomMovement","_Movement2","_Movement3","_velocity","_class","_Movement","old","set","_position","apply","arguments","equals","BgUtils","r","theta","cos","sin","minSpeed","maxSpeed","polar2rectangular","random","PI","min","max","floor","colors","randomInt","options","opts","extend","brickX","brickY","x","y","width","height","top","left","bottom","right","marginX","marginY","bricksX","bricksY","brickOuterWidth","brickOuterHeight","brickInnerWidth","brickInnerHeight","Array","fill","map","brick","idx","alive"],"mappings":"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","file":"./src/main/resources/static/lib/engine.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _entityDirective = __webpack_require__(1);\n\t\n\tvar _entityDirective2 = _interopRequireDefault(_entityDirective);\n\t\n\tvar _sceneDirective = __webpack_require__(2);\n\t\n\tvar _sceneDirective2 = _interopRequireDefault(_sceneDirective);\n\t\n\tvar _movementFactory = __webpack_require__(4);\n\t\n\tvar _movementFactory2 = _interopRequireDefault(_movementFactory);\n\t\n\tvar _utils = __webpack_require__(8);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (angular) {\n\t    if (!angular) {\n\t        throw new Error('angular not defined');\n\t    }\n\t\n\t    var module = angular.module('bg.engine', []);\n\t    module.directive('bgEntity', _entityDirective2.default);\n\t    module.directive('bgScene', _sceneDirective2.default);\n\t    module.value('bgUtils', _utils2.default);\n\t    module.factory('bgMovement', _movementFactory2.default);\n\t})(window.angular);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function () {\n\t    return {\n\t        restrict: 'E',\n\t        scope: {\n\t            size: '<',\n\t            position: '=',\n\t            texture: '<',\n\t            movement: '<',\n\t            name: '@',\n\t            collision: '&'\n\t        },\n\t        require: '^^bgScene',\n\t        link: function link(scope, elem, attr, scene) {\n\t            var entity = {\n\t                updateMovement: function updateMovement(movements) {\n\t                    if (scope.movement) {\n\t                        var performed = null;\n\t                        var callback = function callback(value) {\n\t                            if (typeof value !== 'undefined') {\n\t                                performed = { entity: entity, oldPosition: scope.position, newPosition: value };\n\t                            } else {\n\t                                return scope.position;\n\t                            }\n\t                        };\n\t                        scope.movement.update(callback);\n\t                        if (performed) {\n\t                            movements.push(performed);\n\t                        }\n\t                    }\n\t                },\n\t                setPosition: function setPosition(position) {\n\t                    scope.position = position;\n\t                },\n\t                fireCollision: function fireCollision(event, actions) {\n\t                    scope.collision({ '$event': event, '$actions': actions });\n\t                }\n\t            };\n\t            scene.addEntity(entity);\n\t            scope.$watchCollection('size', function (size) {\n\t                entity.size = size;\n\t                elem.css('width', size[0] + 'px');\n\t                elem.css('height', size[1] + 'px');\n\t            });\n\t            scope.$watchCollection('position', function (position) {\n\t                entity.position = position;\n\t                elem.css('left', position[0] + 'px');\n\t                elem.css('top', position[1] + 'px');\n\t            });\n\t            scope.$watch('texture', function (texture) {\n\t                entity.texture = texture;\n\t                elem.css('background', texture);\n\t            });\n\t            scope.$watch('name', function (name) {\n\t                entity.name = name;\n\t            });\n\t            scope.$watch('movement', function (movement) {\n\t                entity.movement = movement;\n\t            });\n\t            scope.$on('$destroy', function () {\n\t                scene.removeEntity(entity);\n\t            });\n\t        }\n\t    };\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _events = __webpack_require__(3);\n\t\n\texports.default = ['$rootScope', '$window', function ($rootScope, $window) {\n\t    return {\n\t        restrict: 'E',\n\t        scope: true,\n\t        controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n\t            var scene = this;\n\t            scene.entities = {};\n\t            this.tick = function () {\n\t                var movements = [];\n\t                for (var id in scene.entities) {\n\t                    scene.entities[id].updateMovement(movements);\n\t                }\n\t\n\t                while (movements.length) {\n\t                    var newMovements = [];\n\t                    movements.forEach(function (movement) {\n\t                        var source = movement.entity;\n\t                        movement.entity.setPosition(movement.newPosition);\n\t                        //Check against other entities\n\t                        for (var _id in scene.entities) {\n\t                            var target = scene.entities[_id];\n\t                            if (source === target) {\n\t                                // Do not check against self\n\t                                continue;\n\t                            }\n\t\n\t                            //collision detection taken from https://hamaluik.com/posts/simple-aabb-collision-using-minkowski-difference/\n\t\n\t                            //minkowski addition\n\t                            var md = {\n\t                                position: [target.position[0] - (movement.newPosition[0] + source.size[0]), target.position[1] - (movement.newPosition[1] + source.size[1])],\n\t                                size: [source.size[0] + target.size[0], source.size[1] + target.size[1]]\n\t                            };\n\t\n\t                            if (md.position[0] <= 0 && md.position[0] + md.size[0] >= 0 && md.position[1] <= 0 && md.position[1] + md.size[1] >= 0) {\n\t                                var minDist;\n\t                                var penetration;\n\t                                var handled;\n\t                                var actions;\n\t                                var evt;\n\t\n\t                                (function () {\n\t                                    minDist = Math.abs(md.position[0]);\n\t                                    penetration = [md.position[0], 0];\n\t\n\t                                    if (Math.abs(md.position[0] + md.size[0]) < minDist) {\n\t                                        minDist = Math.abs(md.position[0] + md.size[0]);\n\t                                        penetration = [md.position[0] + md.size[0], 0];\n\t                                    }\n\t                                    if (Math.abs(md.position[1] + md.size[1]) < minDist) {\n\t                                        minDist = Math.abs(md.position[1] + md.size[1]);\n\t                                        penetration = [0, md.position[1] + md.size[1]];\n\t                                    }\n\t                                    if (Math.abs(md.position[1]) < minDist) {\n\t                                        minDist = Math.abs(md.position[1]);\n\t                                        penetration = [0, md.position[1]];\n\t                                    }\n\t                                    //Fix position\n\t                                    var endPosition = [movement.newPosition[0] + penetration[0], movement.newPosition[1] + penetration[1]];\n\t                                    var delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\n\t                                    var actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]];\n\t                                    var restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\n\t                                    var friction = Math.abs(md.position[0]) < Math.abs(md.position[1]) ? [-1, 1] : [1, -1];\n\t\n\t                                    handled = false;\n\t                                    actions = {\n\t                                        bounce: function bounce() {\n\t                                            //need to move rest * friction\n\t                                            var bouncedPosition = [endPosition[0] + restMotion[0] * friction[0], endPosition[1] + restMotion[1] * friction[1]];\n\t                                            //adjust velocity when needed\n\t                                            if (source.movement) {\n\t                                                var v = source.movement.velocity;\n\t                                                if (v) {\n\t                                                    //source.movement.velocity = [0,0];\n\t                                                    source.movement.velocity = [v[0] * friction[0], v[1] * friction[1]];\n\t                                                }\n\t                                            }\n\t                                            source.setPosition(endPosition);\n\t                                            // newMovements.push({entity : source, oldPosition : endPosition, newPosition: bouncedPosition});\n\t                                            handled = true;\n\t                                        }\n\t                                    };\n\t                                    evt = new _events.CollisionEvent(new _events.EntityTarget(source), new _events.EntityTarget(target));\n\t\n\t                                    source.fireCollision(evt, actions);\n\t                                })();\n\t                            }\n\t                        }\n\t\n\t                        var doWallCollision = function doWallCollision(name, source, endPosition, restMotion, friction) {\n\t                            var evt = new _events.CollisionEvent(new _events.EntityTarget(source), new _events.WallTarget(name));\n\t                            var actions = {\n\t                                bounce: function bounce() {\n\t                                    //need to move rest * friction\n\t                                    var bouncedPosition = [endPosition[0] + restMotion[0] * friction[0], endPosition[1] + restMotion[1] * friction[1]];\n\t                                    //adjust velocity when needed\n\t                                    if (source.movement) {\n\t                                        var v = source.movement.velocity;\n\t                                        if (v) {\n\t                                            //source.movement.velocity = [0,0];\n\t                                            source.movement.velocity = [v[0] * friction[0], v[1] * friction[1]];\n\t                                        }\n\t                                    }\n\t                                    source.setPosition(endPosition);\n\t                                    //newMovements.push({entity : source, oldPosition : endPosition, newPosition: bouncedPosition});\n\t                                    handled = true;\n\t                                }\n\t                            };\n\t                            source.fireCollision(evt, actions);\n\t                        };\n\t\n\t                        // check against walls\n\t\n\t                        if (movement.newPosition[0] < 0) {\n\t                            var _endPosition = [0, movement.newPosition[1]];\n\t                            var _delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\n\t                            var _actual = [_endPosition[0] - movement.oldPosition[0], _endPosition[1] - movement.oldPosition[1]];\n\t                            var _restMotion = [_delta[0] - _actual[0], _delta[1] - _actual[1]];\n\t                            doWallCollision('left', source, _endPosition, _restMotion, [-1, 1]);\n\t                        } else if (movement.newPosition[0] + source.size[0] > scene.size[0]) {\n\t                            var _endPosition2 = [scene.size[0] - source.size[0], movement.newPosition[1]];\n\t                            var _delta2 = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\n\t                            var _actual2 = [_endPosition2[0] - movement.oldPosition[0], _endPosition2[1] - movement.oldPosition[1]];\n\t                            var _restMotion2 = [_delta2[0] - _actual2[0], _delta2[1] - _actual2[1]];\n\t                            doWallCollision('right', source, _endPosition2, _restMotion2, [-1, 1]);\n\t                        } else if (movement.newPosition[1] < 0) {\n\t                            var _endPosition3 = [movement.newPosition[0], 0];\n\t                            var _delta3 = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\n\t                            var _actual3 = [_endPosition3[0] - movement.oldPosition[0], _endPosition3[1] - movement.oldPosition[1]];\n\t                            var _restMotion3 = [_delta3[0] - _actual3[0], _delta3[1] - _actual3[1]];\n\t                            doWallCollision('top', source, _endPosition3, _restMotion3, [1, -1]);\n\t                        } else if (movement.newPosition[1] + source.size[1] > scene.size[1]) {\n\t                            var _endPosition4 = [movement.newPosition[0], scene.size[1] - source.size[1]];\n\t                            var _delta4 = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\n\t                            var _actual4 = [_endPosition4[0] - movement.oldPosition[0], _endPosition4[1] - movement.oldPosition[1]];\n\t                            var _restMotion4 = [_delta4[0] - _actual4[0], _delta4[1] - _actual4[1]];\n\t                            doWallCollision('bottom', source, _endPosition4, _restMotion4, [1, -1]);\n\t                        }\n\t                    });\n\t                    movements = newMovements;\n\t                }\n\t            };\n\t            var nextId = 0;\n\t            var entityId = function entityId(entity) {\n\t                if (!('entityId' in entity)) {\n\t                    entity.entityId = nextId++;\n\t                }\n\t                return entity.entityId;\n\t            };\n\t            this.addEntity = function (entity) {\n\t                scene.entities[entityId(entity)] = entity;\n\t            };\n\t            this.removeEntity = function (entity) {\n\t                delete scene.entities[entity.entityId];\n\t            };\n\t        }],\n\t        link: function link(scope, elem, attr, scene) {\n\t            scope.$watch(attr.size, function (size) {\n\t                scene.size = size;\n\t                elem.css('width', size[0] + 'px');\n\t                elem.css('height', size[1] + 'px');\n\t            });\n\t            var animCallback = function animCallback() {\n\t                scene.tick();\n\t                $rootScope.$digest();\n\t                scene.animRequest = $window.requestAnimationFrame(animCallback);\n\t            };\n\t            scene.animRequest = $window.requestAnimationFrame(animCallback);\n\t            scope.$on('$destroy', function () {\n\t                $window.cancelAnimationFrame(scene.animRequest);\n\t            });\n\t        }\n\t    };\n\t}];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CollisionTarget = exports.CollisionTarget = function CollisionTarget() {\n\t    _classCallCheck(this, CollisionTarget);\n\t};\n\t\n\tvar _entity = Symbol['entity'];\n\t\n\tvar EntityTarget = exports.EntityTarget = function (_CollisionTarget) {\n\t    _inherits(EntityTarget, _CollisionTarget);\n\t\n\t    function EntityTarget(entity) {\n\t        _classCallCheck(this, EntityTarget);\n\t\n\t        var _this = _possibleConstructorReturn(this, (EntityTarget.__proto__ || Object.getPrototypeOf(EntityTarget)).call(this));\n\t\n\t        _this[_entity] = entity;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(EntityTarget, [{\n\t        key: 'name',\n\t        get: function get() {\n\t            return this[_entity].name;\n\t        }\n\t    }, {\n\t        key: 'type',\n\t        get: function get() {\n\t            return 'entity';\n\t        }\n\t    }]);\n\t\n\t    return EntityTarget;\n\t}(CollisionTarget);\n\t\n\tvar _name = Symbol('name');\n\t\n\tvar WallTarget = exports.WallTarget = function (_CollisionTarget2) {\n\t    _inherits(WallTarget, _CollisionTarget2);\n\t\n\t    function WallTarget(name) {\n\t        _classCallCheck(this, WallTarget);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, (WallTarget.__proto__ || Object.getPrototypeOf(WallTarget)).call(this));\n\t\n\t        _this2[_name] = name;\n\t        return _this2;\n\t    }\n\t\n\t    _createClass(WallTarget, [{\n\t        key: 'type',\n\t        get: function get() {\n\t            return 'wall';\n\t        }\n\t    }, {\n\t        key: 'name',\n\t        get: function get() {\n\t            return this[_name];\n\t        }\n\t    }]);\n\t\n\t    return WallTarget;\n\t}(CollisionTarget);\n\t\n\tvar _source = Symbol('source');\n\tvar _target = Symbol('target');\n\t\n\tvar CollisionEvent = exports.CollisionEvent = function () {\n\t    function CollisionEvent(source, target) {\n\t        _classCallCheck(this, CollisionEvent);\n\t\n\t        this[_source] = source;\n\t        this[_target] = target;\n\t    }\n\t\n\t    _createClass(CollisionEvent, [{\n\t        key: 'source',\n\t        get: function get() {\n\t            return this[_source];\n\t        }\n\t    }, {\n\t        key: 'target',\n\t        get: function get() {\n\t            return this[_target];\n\t        }\n\t    }]);\n\n\t    return CollisionEvent;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function () {\n\t\n\t    return {\n\t        custom: function custom() {\n\t            return new _CustomMovement2.default();\n\t        },\n\t        automatic: function automatic() {\n\t            return new _AutomaticMovement2.default();\n\t        }\n\t    };\n\t};\n\t\n\tvar _AutomaticMovement = __webpack_require__(5);\n\t\n\tvar _AutomaticMovement2 = _interopRequireDefault(_AutomaticMovement);\n\t\n\tvar _CustomMovement = __webpack_require__(7);\n\t\n\tvar _CustomMovement2 = _interopRequireDefault(_CustomMovement);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Movement2 = __webpack_require__(6);\n\t\n\tvar _Movement3 = _interopRequireDefault(_Movement2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _velocity = Symbol('velocity');\n\t\n\tvar _class = function (_Movement) {\n\t    _inherits(_class, _Movement);\n\t\n\t    function _class() {\n\t        _classCallCheck(this, _class);\n\t\n\t        var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this));\n\t\n\t        _this[_velocity] = [0, 0];\n\t        return _this;\n\t    }\n\t\n\t    _createClass(_class, [{\n\t        key: 'update',\n\t        value: function update(callback) {\n\t            var old = callback();\n\t            if (this[_velocity][0] !== 0 || this[_velocity][1] !== 0) {\n\t                callback([old[0] + this[_velocity][0], old[1] + this[_velocity][1]]);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'velocity',\n\t        set: function set(value) {\n\t            this[_velocity] = value;\n\t        },\n\t        get: function get() {\n\t            return this[_velocity];\n\t        }\n\t    }]);\n\n\t    return _class;\n\t}(_Movement3.default);\n\n\texports.default = _class;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _class = function () {\n\t    function _class() {\n\t        _classCallCheck(this, _class);\n\t    }\n\t\n\t    _createClass(_class, [{\n\t        key: \"update\",\n\t        value: function update(callback) {}\n\t    }]);\n\n\t    return _class;\n\t}();\n\n\texports.default = _class;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Movement2 = __webpack_require__(6);\n\t\n\tvar _Movement3 = _interopRequireDefault(_Movement2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _position = Symbol('position');\n\t\n\tvar _class = function (_Movement) {\n\t    _inherits(_class, _Movement);\n\t\n\t    function _class() {\n\t        _classCallCheck(this, _class);\n\t\n\t        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(_class, [{\n\t        key: 'update',\n\t        value: function update(callback) {\n\t            if (!angular.equals(callback(), this[_position])) {\n\t                callback(this[_position]);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'position',\n\t        set: function set(value) {\n\t            this[_position] = value;\n\t        }\n\t    }]);\n\n\t    return _class;\n\t}(_Movement3.default);\n\n\texports.default = _class;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BgUtils = function () {\n\t    function BgUtils() {\n\t        _classCallCheck(this, BgUtils);\n\t    }\n\t\n\t    _createClass(BgUtils, null, [{\n\t        key: 'polar2rectangular',\n\t\n\t        /**\r\n\t         * Converts a polar vector of length r and angle theta to a rectangular vector\r\n\t         * @param r The size of the polar vector\r\n\t         * @param theta The polar angle of the vector\r\n\t         * @returns {*[]} a [x,y] vector\r\n\t         */\n\t        value: function polar2rectangular(r, theta) {\n\t            return [r * Math.cos(theta), r * Math.sin(theta)];\n\t        }\n\t    }, {\n\t        key: 'randomBallVelocity',\n\t        value: function randomBallVelocity(minSpeed, maxSpeed) {\n\t            return this.polar2rectangular(minSpeed + Math.random() * (maxSpeed - minSpeed), Math.random() * Math.PI);\n\t        }\n\t    }, {\n\t        key: 'randomInt',\n\t        value: function randomInt(min, max) {\n\t            return Math.floor(Math.random() * (max - min + 1) + min);\n\t        }\n\t    }, {\n\t        key: 'randomColor',\n\t        value: function randomColor() {\n\t            var colors = ['red', 'green', 'blue', 'yellow', 'orange'];\n\t            return colors[BgUtils.randomInt(0, colors.length - 1)];\n\t        }\n\t    }, {\n\t        key: 'createBrickField',\n\t        value: function createBrickField(options) {\n\t            var opts = angular.extend({\n\t                'texture': function texture(brickX, brickY, x, y, width, height) {\n\t                    return 'orange';\n\t                },\n\t                'top': 0,\n\t                'left': 0,\n\t                'bottom': 0,\n\t                'right': 0,\n\t                'marginX': 1,\n\t                'marginY': 1,\n\t                'bricksX': 10,\n\t                'bricksY': 10\n\t            }, options);\n\t\n\t            var brickOuterWidth = (opts.width - (opts.left + opts.right)) / opts.bricksX;\n\t            var brickOuterHeight = (opts.height - (opts.top + opts.bottom)) / opts.bricksY;\n\t            var brickInnerWidth = brickOuterWidth - opts.marginX;\n\t            var brickInnerHeight = brickOuterHeight - opts.marginY;\n\t\n\t            return new Array(opts.bricksX * opts.bricksY).fill(null).map(function (brick, idx) {\n\t                var x = idx % opts.bricksX;\n\t                var y = Math.floor(idx / opts.bricksX);\n\t                var position = [opts.left + opts.marginX + x * brickOuterWidth, opts.top + opts.marginY + y * brickOuterHeight];\n\t                return {\n\t                    position: position,\n\t                    size: [brickInnerWidth, brickInnerHeight],\n\t                    texture: opts.texture(x, y, position[0], position[1], brickInnerWidth, brickInnerHeight),\n\t                    name: 'brick' + idx,\n\t                    alive: true\n\t                };\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return BgUtils;\n\t}();\n\t\n\texports.default = BgUtils;\n\t;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// src/main/resources/static/lib/engine.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c360880a71448c17d577","import entityDirective from './angular/entityDirective';\r\nimport sceneDirective from './angular/sceneDirective';\r\nimport movementFactory from './angular/movementFactory';\r\nimport BgUtils from './angular/utils';\r\n\r\n(function (angular) {\r\n    if (!angular) {\r\n        throw new Error('angular not defined');\r\n    }\r\n\r\n    const module = angular.module('bg.engine', []);\r\n    module.directive('bgEntity', entityDirective);\r\n    module.directive('bgScene', sceneDirective);\r\n    module.value('bgUtils', BgUtils);\r\n    module.factory('bgMovement', movementFactory);\r\n\r\n})(window.angular);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/engine.js","export default function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            size: '<',\r\n            position: '=',\r\n            texture: '<',\r\n            movement: '<',\r\n            name: '@',\r\n            collision: '&'\r\n        },\r\n        require: '^^bgScene',\r\n        link: function (scope, elem, attr, scene) {\r\n            let entity = {\r\n                updateMovement: function (movements) {\r\n                    if (scope.movement) {\r\n                        var performed = null;\r\n                        let callback = function (value) {\r\n                            if (typeof value !== 'undefined') {\r\n                                performed = {entity: entity, oldPosition: scope.position, newPosition: value};\r\n                            } else {\r\n                                return scope.position;\r\n                            }\r\n                        };\r\n                        scope.movement.update(callback);\r\n                        if (performed) {\r\n                            movements.push(performed);\r\n                        }\r\n                    }\r\n                },\r\n                setPosition: function (position) {\r\n                    scope.position = position;\r\n                },\r\n                fireCollision: function (event, actions) {\r\n                    scope.collision({'$event': event, '$actions': actions});\r\n                }\r\n            };\r\n            scene.addEntity(entity);\r\n            scope.$watchCollection('size', function (size) {\r\n                entity.size = size;\r\n                elem.css('width', size[0] + 'px');\r\n                elem.css('height', size[1] + 'px');\r\n            });\r\n            scope.$watchCollection('position', function (position) {\r\n                entity.position = position;\r\n                elem.css('left', position[0] + 'px');\r\n                elem.css('top', position[1] + 'px');\r\n            });\r\n            scope.$watch('texture', function (texture) {\r\n                entity.texture = texture;\r\n                elem.css('background', texture);\r\n            });\r\n            scope.$watch('name', function (name) {\r\n                entity.name = name;\r\n            });\r\n            scope.$watch('movement', function (movement) {\r\n                entity.movement = movement;\r\n            });\r\n            scope.$on('$destroy', function () {\r\n                scene.removeEntity(entity);\r\n            });\r\n        }\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/angular/entityDirective.js","import {EntityTarget,WallTarget,CollisionEvent} from '../physics/events'\r\n\r\nexport default ['$rootScope', '$window', function ($rootScope, $window) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: true,\r\n        controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\r\n            let scene = this;\r\n            scene.entities = {};\r\n            this.tick = function () {\r\n                let movements = [];\r\n                for (let id in scene.entities) {\r\n                    scene.entities[id].updateMovement(movements);\r\n                }\r\n\r\n                while (movements.length) {\r\n                    var newMovements = [];\r\n                    movements.forEach(function (movement) {\r\n                        let source = movement.entity;\r\n                        movement.entity.setPosition(movement.newPosition);\r\n                        //Check against other entities\r\n                        for (let id in scene.entities) {\r\n                            let target = scene.entities[id];\r\n                            if (source === target) {\r\n                                // Do not check against self\r\n                                continue;\r\n                            }\r\n\r\n                            //collision detection taken from https://hamaluik.com/posts/simple-aabb-collision-using-minkowski-difference/\r\n\r\n                            //minkowski addition\r\n                            let md = {\r\n                                position: [\r\n                                    target.position[0] - (movement.newPosition[0] + source.size[0]),\r\n                                    target.position[1] - (movement.newPosition[1] + source.size[1])\r\n                                ],\r\n                                size: [\r\n                                    source.size[0] + target.size[0],\r\n                                    source.size[1] + target.size[1]\r\n                                ]\r\n                            };\r\n\r\n                            if (md.position[0] <= 0 &&\r\n                                md.position[0] + md.size[0] >= 0 &&\r\n                                md.position[1] <= 0 &&\r\n                                md.position[1] + md.size[1] >= 0) {\r\n\r\n                                var minDist = Math.abs(md.position[0]);\r\n                                var penetration = [md.position[0], 0];\r\n                                if (Math.abs(md.position[0] + md.size[0]) < minDist) {\r\n                                    minDist = Math.abs(md.position[0] + md.size[0]);\r\n                                    penetration = [md.position[0] + md.size[0], 0];\r\n                                }\r\n                                if (Math.abs(md.position[1] + md.size[1]) < minDist) {\r\n                                    minDist = Math.abs(md.position[1] + md.size[1]);\r\n                                    penetration = [0, md.position[1] + md.size[1]];\r\n                                }\r\n                                if (Math.abs(md.position[1]) < minDist) {\r\n                                    minDist = Math.abs(md.position[1]);\r\n                                    penetration = [0, md.position[1]];\r\n                                }\r\n                                //Fix position\r\n                                let endPosition = [movement.newPosition[0] + penetration[0], movement.newPosition[1] + penetration[1]];\r\n                                let delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\r\n                                let actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]]\r\n                                let restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\r\n                                let friction = (Math.abs(md.position[0]) < Math.abs(md.position[1])) ? [-1, 1] : [1, -1];\r\n\r\n                                var handled = false;\r\n                                var actions = {\r\n                                    bounce: function () {\r\n                                        //need to move rest * friction\r\n                                        let bouncedPosition = [\r\n                                            endPosition[0] + (restMotion[0] * friction[0]),\r\n                                            endPosition[1] + (restMotion[1] * friction[1])\r\n                                        ];\r\n                                        //adjust velocity when needed\r\n                                        if (source.movement) {\r\n                                            var v = source.movement.velocity;\r\n                                            if (v) {\r\n                                                //source.movement.velocity = [0,0];\r\n                                                source.movement.velocity = [\r\n                                                    v[0] * friction[0],\r\n                                                    v[1] * friction[1]\r\n                                                ];\r\n                                            }\r\n                                        }\r\n                                        source.setPosition(endPosition);\r\n                                        // newMovements.push({entity : source, oldPosition : endPosition, newPosition: bouncedPosition});\r\n                                        handled = true;\r\n                                    }\r\n                                };\r\n\r\n                                var evt = new CollisionEvent(new EntityTarget(source), new EntityTarget(target));\r\n                                source.fireCollision(evt, actions);\r\n                            }\r\n                        }\r\n\r\n                        let doWallCollision = function (name, source, endPosition, restMotion, friction) {\r\n                            let evt = new CollisionEvent(new EntityTarget(source), new WallTarget(name));\r\n                            let actions = {\r\n                                bounce: function () {\r\n                                    //need to move rest * friction\r\n                                    let bouncedPosition = [\r\n                                        endPosition[0] + (restMotion[0] * friction[0]),\r\n                                        endPosition[1] + (restMotion[1] * friction[1])\r\n                                    ];\r\n                                    //adjust velocity when needed\r\n                                    if (source.movement) {\r\n                                        var v = source.movement.velocity;\r\n                                        if (v) {\r\n                                            //source.movement.velocity = [0,0];\r\n                                            source.movement.velocity = [\r\n                                                v[0] * friction[0],\r\n                                                v[1] * friction[1]\r\n                                            ];\r\n                                        }\r\n                                    }\r\n                                    source.setPosition(endPosition);\r\n                                    //newMovements.push({entity : source, oldPosition : endPosition, newPosition: bouncedPosition});\r\n                                    handled = true;\r\n                                }\r\n                            };\r\n                            source.fireCollision(evt, actions);\r\n                        };\r\n\r\n                        // check against walls\r\n\r\n                        if (movement.newPosition[0] < 0) {\r\n                            let endPosition = [0, movement.newPosition[1]];\r\n                            let delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\r\n                            let actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]]\r\n                            let restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\r\n                            doWallCollision('left', source, endPosition, restMotion, [-1, 1]);\r\n                        } else if (movement.newPosition[0] + source.size[0] > scene.size[0]) {\r\n                            let endPosition = [scene.size[0] - source.size[0], movement.newPosition[1]];\r\n                            let delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\r\n                            let actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]]\r\n                            let restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\r\n                            doWallCollision('right', source, endPosition, restMotion, [-1, 1]);\r\n                        } else if (movement.newPosition[1] < 0) {\r\n                            let endPosition = [movement.newPosition[0], 0];\r\n                            let delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\r\n                            let actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]]\r\n                            let restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\r\n                            doWallCollision('top', source, endPosition, restMotion, [1, -1]);\r\n                        } else if (movement.newPosition[1] + source.size[1] > scene.size[1]) {\r\n                            let endPosition = [movement.newPosition[0], scene.size[1] - source.size[1]];\r\n                            let delta = [movement.newPosition[0] - movement.oldPosition[0], movement.newPosition[1] - movement.oldPosition[1]];\r\n                            let actual = [endPosition[0] - movement.oldPosition[0], endPosition[1] - movement.oldPosition[1]]\r\n                            let restMotion = [delta[0] - actual[0], delta[1] - actual[1]];\r\n                            doWallCollision('bottom', source, endPosition, restMotion, [1, -1]);\r\n                        }\r\n                    });\r\n                    movements = newMovements;\r\n                }\r\n            };\r\n            var nextId = 0;\r\n            let entityId = function (entity) {\r\n                if (!('entityId' in entity)) {\r\n                    entity.entityId = nextId++;\r\n                }\r\n                return entity.entityId;\r\n            };\r\n            this.addEntity = function (entity) {\r\n                scene.entities[entityId(entity)] = entity;\r\n            };\r\n            this.removeEntity = function (entity) {\r\n                delete scene.entities[entity.entityId];\r\n            };\r\n        }],\r\n        link: function (scope, elem, attr, scene) {\r\n            scope.$watch(attr.size, function (size) {\r\n                scene.size = size;\r\n                elem.css('width', size[0] + 'px');\r\n                elem.css('height', size[1] + 'px');\r\n            });\r\n            let animCallback = function () {\r\n                scene.tick();\r\n                $rootScope.$digest();\r\n                scene.animRequest = $window.requestAnimationFrame(animCallback);\r\n            };\r\n            scene.animRequest = $window.requestAnimationFrame(animCallback);\r\n            scope.$on('$destroy', function () {\r\n                $window.cancelAnimationFrame(scene.animRequest);\r\n            });\r\n        }\r\n    };\r\n}]\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/angular/sceneDirective.js","export class CollisionTarget {\r\n\r\n}\r\n\r\nconst _entity = Symbol['entity'];\r\nexport class EntityTarget extends CollisionTarget {\r\n    constructor(entity) {\r\n        super();\r\n        this[_entity] = entity;\r\n    }\r\n\r\n    get name() {\r\n        return this[_entity].name;\r\n    }\r\n\r\n    get type() {\r\n        return 'entity';\r\n    }\r\n}\r\n\r\nconst _name = Symbol('name');\r\nexport class WallTarget extends CollisionTarget {\r\n    constructor(name) {\r\n        super();\r\n        this[_name] = name;\r\n    }\r\n\r\n    get type() {\r\n        return 'wall';\r\n    }\r\n\r\n    get name() {\r\n        return this[_name];\r\n    }\r\n}\r\n\r\nconst _source = Symbol('source');\r\nconst _target = Symbol('target');\r\nexport class CollisionEvent {\r\n    constructor(source, target) {\r\n        this[_source] = source;\r\n        this[_target] = target;\r\n    }\r\n\r\n    get source() {\r\n        return this[_source];\r\n    }\r\n\r\n    get target() {\r\n        return this[_target];\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/physics/events.js","import AutomaticMovement from '../movement/AutomaticMovement'\r\nimport CustomMovement from '../movement/CustomMovement'\r\n\r\nexport default function () {\r\n\r\n    return {\r\n        custom: function () {\r\n            return new CustomMovement();\r\n        },\r\n        automatic: function () {\r\n            return new AutomaticMovement();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/angular/movementFactory.js","import Movement from './Movement'\r\n\r\nconst _velocity = Symbol('velocity');\r\nexport default class extends Movement {\r\n    constructor() {\r\n        super();\r\n        this[_velocity] = [0, 0];\r\n    }\r\n\r\n    set velocity(value) {\r\n        this[_velocity] = value;\r\n    }\r\n\r\n    get velocity() {\r\n        return this[_velocity];\r\n    }\r\n\r\n    update(callback) {\r\n        let old = callback();\r\n        if (this[_velocity][0] !== 0 || this[_velocity][1] !== 0) {\r\n            callback([old[0] + this[_velocity][0], old[1] + this[_velocity][1]]);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/movement/AutomaticMovement.js","export default class {\r\n    update(callback) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/movement/Movement.js","import Movement from './Movement'\r\n\r\nconst _position = Symbol('position');\r\nexport default class extends Movement {\r\n    set position(value) {\r\n        this[_position] = value;\r\n    }\r\n\r\n    update(callback) {\r\n        if (!angular.equals(callback(), this[_position])) {\r\n            callback(this[_position]);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/movement/CustomMovement.js","export default class BgUtils {\r\n    /**\r\n     * Converts a polar vector of length r and angle theta to a rectangular vector\r\n     * @param r The size of the polar vector\r\n     * @param theta The polar angle of the vector\r\n     * @returns {*[]} a [x,y] vector\r\n     */\r\n    static polar2rectangular(r, theta) {\r\n        return [r * Math.cos(theta), r * Math.sin(theta)];\r\n    }\r\n\r\n    static randomBallVelocity(minSpeed, maxSpeed) {\r\n        return this.polar2rectangular(minSpeed + Math.random() * (maxSpeed - minSpeed), Math.random() * Math.PI);\r\n    }\r\n\r\n    static randomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    static randomColor() {\r\n        const colors = ['red', 'green', 'blue', 'yellow', 'orange'];\r\n        return colors[BgUtils.randomInt(0, colors.length - 1)];\r\n    }\r\n\r\n    static createBrickField(options) {\r\n        const opts = angular.extend({\r\n            'texture': function (brickX, brickY, x, y, width, height) {\r\n                return 'orange';\r\n            },\r\n            'top': 0,\r\n            'left': 0,\r\n            'bottom': 0,\r\n            'right': 0,\r\n            'marginX': 1,\r\n            'marginY': 1,\r\n            'bricksX': 10,\r\n            'bricksY': 10\r\n        }, options);\r\n\r\n        let brickOuterWidth = (opts.width - (opts.left + opts.right)) / opts.bricksX;\r\n        let brickOuterHeight = (opts.height - (opts.top + opts.bottom)) / opts.bricksY;\r\n        let brickInnerWidth = brickOuterWidth - opts.marginX;\r\n        let brickInnerHeight = brickOuterHeight - opts.marginY;\r\n\r\n        return new Array(opts.bricksX * opts.bricksY)\r\n            .fill(null)\r\n            .map(function (brick, idx) {\r\n                let x = idx % opts.bricksX;\r\n                let y = Math.floor(idx / opts.bricksX);\r\n                let position = [\r\n                    opts.left + opts.marginX + x * brickOuterWidth,\r\n                    opts.top + opts.marginY + y * brickOuterHeight\r\n                ];\r\n                return {\r\n                    position: position,\r\n                    size: [brickInnerWidth, brickInnerHeight],\r\n                    texture: opts.texture(x, y, position[0], position[1], brickInnerWidth, brickInnerHeight),\r\n                    name: 'brick' + idx,\r\n                    alive: true\r\n                }\r\n            });\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/engine/angular/utils.js"],"sourceRoot":""}